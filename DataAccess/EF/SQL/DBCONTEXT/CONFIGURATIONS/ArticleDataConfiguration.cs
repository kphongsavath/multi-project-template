// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using $ext_safeprojectname$.DataAccess.EF;
using $ext_safeprojectname$.DataAccess.EF.Sql.DbContext;
using $ext_safeprojectname$.DataAccess.EF.Sql.Entities;

#nullable disable

namespace $ext_safeprojectname$.DataAccess.EF.Sql.DbContext.Configurations
{
    public partial class ArticleDataConfiguration : IEntityTypeConfiguration<ArticleData>
    {
        public void Configure(EntityTypeBuilder<ArticleData> entity)
        {
            entity.HasIndex(e => e.PhBob, "IDX_BOB")
                .HasFillFactor(90);

            entity.HasIndex(e => e.PhPlangroup, "IDX_PLANGROUP")
                .HasFillFactor(90);

            entity.Property(e => e.ArticleCategory).IsUnicode(false);

            entity.Property(e => e.CreateDate).HasDefaultValueSql("((sysdatetimeoffset() AT TIME ZONE 'Eastern Standard Time'))");

            entity.Property(e => e.CreateUser).IsUnicode(false);

            entity.Property(e => e.KeyItemFlag)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength();

            entity.Property(e => e.Masterstyle).IsUnicode(false);

            entity.Property(e => e.MasterstyleDesc).IsUnicode(false);

            entity.Property(e => e.MerchItemSegment).IsUnicode(false);

            entity.Property(e => e.MerchItemSegmentDesc).IsUnicode(false);

            entity.Property(e => e.ModifiedUser).IsUnicode(false);

            entity.Property(e => e.Mpid).IsUnicode(false);

            entity.Property(e => e.MpidDesc).IsUnicode(false);

            entity.Property(e => e.PhBob).IsUnicode(false);

            entity.Property(e => e.PhBobDesc).IsUnicode(false);

            entity.Property(e => e.PhBrand).IsUnicode(false);

            entity.Property(e => e.PhBrandDesc).IsUnicode(false);

            entity.Property(e => e.PhCategory).IsUnicode(false);

            entity.Property(e => e.PhCategoryDesc).IsUnicode(false);

            entity.Property(e => e.PhPlangroup).IsUnicode(false);

            entity.Property(e => e.PhPlangroupDesc).IsUnicode(false);

            entity.Property(e => e.PhSubcategory).IsUnicode(false);

            entity.Property(e => e.PhSubcategoryDesc).IsUnicode(false);

            entity.Property(e => e.PlanOrgFlag).IsUnicode(false);

            entity.Property(e => e.PlanOrgPink).IsUnicode(false);

            entity.Property(e => e.PlanOrgVsb).IsUnicode(false);

            entity.Property(e => e.PlanOrgVsbaIeg).IsUnicode(false);

            entity.Property(e => e.PlanOrgVsd).IsUnicode(false);

            entity.Property(e => e.PlanOrgVss).IsUnicode(false);

            entity.Property(e => e.ProcessIndicator)
                .IsUnicode(false)
                .HasDefaultValueSql("('N')")
                .IsFixedLength();

            entity.Property(e => e.SapCategoryCode).IsUnicode(false);

            entity.Property(e => e.SapCategoryDesc).IsUnicode(false);

            entity.Property(e => e.SapClassCode).IsUnicode(false);

            entity.Property(e => e.SapClassDesc).IsUnicode(false);

            entity.Property(e => e.SapCollection).IsUnicode(false);

            entity.Property(e => e.SapEmotionalSpace).IsUnicode(false);

            entity.Property(e => e.SapEmotionalSpaceDesc).IsUnicode(false);

            entity.Property(e => e.SapSectorCode).IsUnicode(false);

            entity.Property(e => e.SapSectorDesc).IsUnicode(false);

            entity.Property(e => e.SapSubbrandCode).IsUnicode(false);

            entity.Property(e => e.SapSubbrandDesc).IsUnicode(false);

            entity.Property(e => e.SapSubclassCode).IsUnicode(false);

            entity.Property(e => e.SapSubclassDesc).IsUnicode(false);

            entity.Property(e => e.StyleDesc).IsUnicode(false);

            entity.Property(e => e.StyleNumber).IsUnicode(false);

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<ArticleData> entity);
    }
}
